<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ImageDisplayerBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEASABIAAD/7QAC/+EAyEV4aWYAAE1NACoAAAAIAAYBGgAFAAAAAQAAAFYBGwAF
        AAAAAQAAAF4BKAADAAAAAQACAAABMQACAAAAFAAAAGYBMgACAAAAFAAAAHqHaQAEAAAAAQAAAI4AAAC6
        AAAASAAAAAEAAABIAAAAAUFkb2JlIFBob3Rvc2hvcCA3LjAAMjAwNzowNToyNiAyMTo1ODozNgAAA6AB
        AAMAAAAB//8AAKACAAQAAAABAAAAyaADAAQAAAABAAAAyQAAAAAAAAAAAAAAAP/bAEMAAgICAgIBAgIC
        AgICAgMDBgQDAwMDBwUFBAYIBwgICAcICAkKDQsJCQwKCAgLDwsMDQ4ODg4JCxARDw4RDQ4ODv/bAEMB
        AgICAwMDBgQEBg4JCAkODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4O
        Dg4ODv/AABEIAMkAyQMBIgACEQEDEQH/xAAfAAABBQEBAQEBAQAAAAAAAAAAAQIDBAUGBwgJCgv/xAC1
        EAACAQMDAgQDBQUEBAAAAX0BAgMABBEFEiExQQYTUWEHInEUMoGRoQgjQrHBFVLR8CQzYnKCCQoWFxgZ
        GiUmJygpKjQ1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoOEhYaHiImKkpOUlZaX
        mJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4eLj5OXm5+jp6vHy8/T19vf4+fr/
        xAAfAQADAQEBAQEBAQEBAAAAAAAAAQIDBAUGBwgJCgv/xAC1EQACAQIEBAMEBwUEBAABAncAAQIDEQQF
        ITEGEkFRB2FxEyIygQgUQpGhscEJIzNS8BVictEKFiQ04SXxFxgZGiYnKCkqNTY3ODk6Q0RFRkdISUpT
        VFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqCg4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrC
        w8TFxsfIycrS09TV1tfY2dri4+Tl5ufo6ery8/T19vf4+fr/2gAMAwEAAhEDEQA/APzM8W+MPFsHxe8V
        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
</value>
  </data>
</root>